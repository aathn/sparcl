-- Should cause a type error

data Nat = Z | S Nat 
 
sig add : Nat -o rev Nat -o rev Nat 
def add Z     y = y 
      | (S x) y = rev S (add x y)

-- sig isZ : !Nat -o Bool
def isZ !Z = True
      | _  = False 

-- sig mul : !Nat -o rev Nat -o rev Nat 
def mul _ (rev Z)    = rev Z with !isZ 
      | !z (rev S y) = add z (mul z y) 
